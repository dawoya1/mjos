/**
 * MJOS Main Entry Point
 * 魔剑工作室操作系统主入口
 */

import { MJOSEngine, EventBus, Logger, ContextManager } from './core/index';

// 导出核心类型和模块
export * from './types/index';
export * from './core/index';

// 主MJOS类
export class MJOS {
  private version = '1.0.0';
  private engine: MJOSEngine;
  private logger: Logger;
  private contextManager: ContextManager;
  
  constructor() {
    this.logger = new Logger('MJOS');
    this.engine = new MJOSEngine();
    this.contextManager = new ContextManager();
    
    this.logger.info('MJOS initialized successfully!');
  }
  
  getVersion(): string {
    return this.version;
  }
  
  async start(): Promise<void> {
    this.logger.info('Starting MJOS...');
    await this.engine.start();
    this.logger.info('MJOS started successfully!');
  }
  
  async stop(): Promise<void> {
    this.logger.info('Stopping MJOS...');
    await this.engine.stop();
    this.logger.info('MJOS stopped successfully!');
  }
  
  getStatus(): { version: string; engine: { running: boolean } } {
    return {
      version: this.version,
      engine: this.engine.getStatus()
    };
  }
  
  getEngine(): MJOSEngine {
    return this.engine;
  }
  
  getContextManager(): ContextManager {
    return this.contextManager;
  }
}

// 默认导出
export default MJOS;
